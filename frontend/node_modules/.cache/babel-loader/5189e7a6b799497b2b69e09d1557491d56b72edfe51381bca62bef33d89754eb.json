{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\university-system\\\\frontend\\\\src\\\\PrivateRoute.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  element: Element,\n  requiredRole,\n  ...rest\n}) => {\n  _s();\n  const navigate = useNavigate(); // استيراد useNavigate للعودة إلى الصفحة السابقة\n  const token = localStorage.getItem('jwt_token'); // تحقق من وجود التوكن في localStorage\n  const role = localStorage.getItem('role'); // استرجاع الدور من localStorage\n\n  if (!token) {\n    // إذا لم يوجد التوكن، أعد توجيه المستخدم إلى صفحة تسجيل الدخول\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n  if (requiredRole && requiredRole !== role) {\n    // إذا كان الدور غير متوافق مع المطلوب، أعد توجيه المستخدم إلى الصفحة السابقة\n    navigate(-1); // العودة إلى الصفحة السابقة\n    return null; // يجب أن يكون المكون فارغًا لأننا سنقوم بالتوجيه مباشرة\n  }\n\n  // إذا كان التوكن موجودًا والدور صحيح، يعرض المكون المحدد\n  return /*#__PURE__*/_jsxDEV(Element, {\n    ...rest\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 10\n  }, this);\n};\n_s(PrivateRoute, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Navigate","useNavigate","jsxDEV","_jsxDEV","PrivateRoute","element","Element","requiredRole","rest","_s","navigate","token","localStorage","getItem","role","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/university-system/frontend/src/PrivateRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { Navigate, useNavigate } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({ element: Element, requiredRole, ...rest }) => {\r\n  const navigate = useNavigate(); // استيراد useNavigate للعودة إلى الصفحة السابقة\r\n  const token = localStorage.getItem('jwt_token'); // تحقق من وجود التوكن في localStorage\r\n  const role = localStorage.getItem('role'); // استرجاع الدور من localStorage\r\n\r\n  if (!token) {\r\n    // إذا لم يوجد التوكن، أعد توجيه المستخدم إلى صفحة تسجيل الدخول\r\n    return <Navigate to=\"/\" />;\r\n  }\r\n\r\n  if (requiredRole && requiredRole !== role) {\r\n    // إذا كان الدور غير متوافق مع المطلوب، أعد توجيه المستخدم إلى الصفحة السابقة\r\n    navigate(-1); // العودة إلى الصفحة السابقة\r\n    return null; // يجب أن يكون المكون فارغًا لأننا سنقوم بالتوجيه مباشرة\r\n  }\r\n\r\n  // إذا كان التوكن موجودًا والدور صحيح، يعرض المكون المحدد\r\n  return <Element {...rest} />;\r\n};\r\n\r\nexport default PrivateRoute;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,YAAY,GAAGA,CAAC;EAAEC,OAAO,EAAEC,OAAO;EAAEC,YAAY;EAAE,GAAGC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACpE,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC,CAAC,CAAC;EAChC,MAAMU,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;EACjD,MAAMC,IAAI,GAAGF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;;EAE3C,IAAI,CAACF,KAAK,EAAE;IACV;IACA,oBAAOR,OAAA,CAACH,QAAQ;MAACe,EAAE,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC5B;EAEA,IAAIZ,YAAY,IAAIA,YAAY,KAAKO,IAAI,EAAE;IACzC;IACAJ,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACd,OAAO,IAAI,CAAC,CAAC;EACf;;EAEA;EACA,oBAAOP,OAAA,CAACG,OAAO;IAAA,GAAKE;EAAI;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;AAC9B,CAAC;AAACV,EAAA,CAlBIL,YAAY;EAAA,QACCH,WAAW;AAAA;AAAAmB,EAAA,GADxBhB,YAAY;AAoBlB,eAAeA,YAAY;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}